{"version":3,"sources":["logo.svg","Home.js","BoosterRow.js","Booster.js","App.js","reportWebVitals.js","index.js"],"names":["Home","setView","className","type","onClick","BoosterRow","character","console","log","fields","characterCard","get","itemCard1","itemCard2","src","alt","heigh","height","Booster","miniatures","useState","booster","setBooster","faction","getRandomInt","max","Math","floor","random","myFactionCharacters","filter","miniature","epicAndRareCharacters","record","rareCharacters","commonCharacters","commonIndex","length","character1","character2","character3","generateBooster","map","App","props","state","count","view","Airtable","apiKey","base","select","eachPage","records","fetchNextPage","setState","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f3667a2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import './Home.css';\n\nexport default function Home({setView}) {\n    return (\n        <div>\n            <button className='homeButton btn btn-primary' type=\"button\" onClick={() => setView(\"Booster\")}>Booster Generator</button>\n            <button className='homeButton btn btn-primary' type=\"button\">Warband Manager</button>\n        </div>\n    );\n}","export default function BoosterRow({character}) {\n    \n    console.log(character.fields);\n    const characterCard = character.get(\"Character Card\")[0]['url'];\n    const itemCard1 = character.get(\"Item Card (from Card 1)\")[0]['url'];\n    const itemCard2 = character.get(\"Item Card (from Card 2)\")[0]['url'];\n\n    return (\n    <div key={character.get(\"Id\")}>  \n        <img src={characterCard} alt=\"the character card\" heigh=\"321px\"></img>\n        <img src={itemCard1} alt=\"item card 1\" height=\"321px\"></img>\n        <img src={itemCard2} alt=\"item card 2\" height=\"321px\"></img>\n    </div>);\n}","import {useState} from 'react';\nimport BoosterRow from './BoosterRow';\n\nexport default function Booster({setView, miniatures}) {\n\n    const [booster, setBooster] = useState([])\n\n    function generateBooster(faction) {\n        function getRandomInt(max) {\n        return Math.floor(Math.random() * max);\n      }\n    \n      const factions = ['Horde', 'Alliance', 'Monster'];\n    \n    \n      if(!faction) {\n          faction = factions[getRandomInt(3)]\n      }\n    \n      const myFactionCharacters = miniatures.filter(miniature => miniature.get('Faction') === faction);\n      console.log(myFactionCharacters);\n      const epicAndRareCharacters = myFactionCharacters.filter(record => record.get(\"Rarity\") !== \"Common\");\n      const rareCharacters = myFactionCharacters.filter(record => record.get(\"Rarity\") === \"Rare\");\n      const commonCharacters = myFactionCharacters.filter(record => record.get(\"Rarity\") === \"Common\");\n    \n      let commonIndex = getRandomInt(commonCharacters.length);\n      let character1 = epicAndRareCharacters[getRandomInt(epicAndRareCharacters.length)];\n      let character2 = null;\n      let character3 = commonCharacters[commonIndex]\n      \n    \n      if(character1.get(\"Rarity\") === 'Epic') {\n        character2 = rareCharacters[getRandomInt(rareCharacters.length)]\n      } else {\n        do {\n          character2 = commonCharacters[getRandomInt(commonCharacters.length)];\n        } while(character3.get(\"Character Name\") === character2.get(\"Character Name\"));\n        \n      }  \n\n      \n      setBooster([character1, character2, character3]);\n      // console.log(character1.get(\"Character Name\"), character2.get(\"Character Name\"),character3.get(\"Character Name\"))\n      \n      \n    //   let totalHonor = character1.getCellValue(\"Honor\") + character2.getCellValue(\"Honor\") + character3.getCellValue(\"Honor\");\n    \n    //   let outputTable = base.getTable(\"Generated Warbands\");\n    //   let record = await outputTable.createRecordAsync(\n    //     {\n    //       \"Faction\": {name: myFaction},\n    //       \"Honor\": totalHonor,\n    //       \"Character 1\": [{id: character1.id}], \n    //       \"Character 2\": [{id: character2.id}], \n    //       \"Character 3\": [{id: character3.id}]\n    //     });\n    }\n\n    return (\n        <div>\n            <div className=\"flexRow\">\n                <button onClick={() => {setView(\"Home\")}}>Go Back</button><h3>Random Booster Generator</h3>\n            </div>\n            <div>\n                <button onClick={() => {generateBooster()}}>Generate Booster</button>\n            </div>\n            <div>\n              {booster.map((character) => {\n                return (character ? <BoosterRow character={character}></BoosterRow> : null)\n              }\n              )}\n            </div>\n        </div>\n    \n    )\n}","import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport Home from './Home'\nimport Booster from './Booster';\nimport Airtable from 'airtable';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      view: 'Home',\n      miniatures: []\n    }\n  }\n\n  componentDidMount() {\n    var base = new Airtable({apiKey: 'keycAAcHBy1WJJYyl'}).base('appi27ynSRiwJ0WEQ');\n\n    base('Miniatures').select({view: 'Grid view'})\n    .eachPage(\n      (records, fetchNextPage) => {\n        this.setState({\n          miniatures: [...this.state.miniatures, ...records]\n        });\n        fetchNextPage();\n      }\n    );\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"App container\">\n        <h1>Warcraft Army Manager lol</h1>\n          {this.state.view === \"Home\" ? <Home setView={(view) => {this.setState({view})}}></Home> : \n          this.state.view === \"Booster\" ? <Booster miniatures={this.state.miniatures} setView={(view) => {this.setState({view})}}></Booster> : \"\"}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}