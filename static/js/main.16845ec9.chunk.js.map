{"version":3,"sources":["Home.js","BoosterRow.js","Booster.js","App.js","reportWebVitals.js","index.js"],"names":["Home","setView","className","type","onClick","BoosterRow","character","console","log","fields","characterCard","get","itemCard1","itemCard2","src","alt","Booster","miniatures","useState","booster","setBooster","faction","setFaction","factions","value","label","onChange","input","isClearable","options","chosenFaction","getRandomInt","max","Math","floor","random","myFactionCharacters","filter","miniature","epicAndRareCharacters","record","rareCharacters","commonCharacters","commonIndex","length","character1","character2","character3","generateBooster","map","App","props","state","count","view","Airtable","apiKey","base","select","eachPage","records","fetchNextPage","setState","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16845ec9.chunk.js","sourcesContent":["import './Home.css';\n\nexport default function Home({setView}) {\n    return (\n        <div>\n            <button className='homeButton btn btn-primary' type=\"button\" onClick={() => setView(\"Booster\")}>Booster Generator</button>\n            <button className='homeButton btn btn-primary' type=\"button\">Warband Manager</button>\n        </div>\n    );\n}","export default function BoosterRow({ character }) {\n  console.log(character.fields);\n  const characterCard = character.get(\"Character Card\")[0][\"url\"];\n  const itemCard1 = character.get(\"Item Card (from Card 1)\")[0][\"url\"];\n  const itemCard2 = character.get(\"Item Card (from Card 2)\")[0][\"url\"];\n\n  return (\n    <div className=\"row\" key={character.get(\"Id\")}>\n      <div className=\"col-5 d-print-inline\">\n        <img className=\"img-fluid\" src={characterCard} alt=\"Character Card\"></img>\n      </div>\n      <div className=\"col-3 d-print-inline\">\n        <img className=\"img-fluid\" src={itemCard1} alt=\"Item Card 1\" ></img>\n      </div>\n      <div className=\"col-3 d-print-inline\">\n        <img className=\"img-fluid\" src={itemCard2} alt=\"Item Card 2\"></img>\n      </div>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport BoosterRow from \"./BoosterRow\";\nimport Select from \"react-select\";\nimport \"./Booster.css\";\n\nexport default function Booster({ setView, miniatures }) {\n  const [booster, setBooster] = useState([]);\n  const [faction, setFaction] = useState(\"\");\n  const factions = [\n    { value: \"Horde\", label: \"Horde\" },\n    { value: \"Alliance\", label: \"Alliance\" },\n    { value: \"Monster\", label: \"Monster\" },\n  ];\n\n  function generateBooster() {\n    let chosenFaction = faction;\n\n    function getRandomInt(max) {\n      return Math.floor(Math.random() * max);\n    }\n\n    if (!chosenFaction) {\n      chosenFaction = factions[getRandomInt(3)].value;\n    }\n\n    const myFactionCharacters = miniatures.filter(\n      (miniature) => miniature.get(\"Faction\") === chosenFaction\n    );\n    console.log(myFactionCharacters);\n    const epicAndRareCharacters = myFactionCharacters.filter(\n      (record) => record.get(\"Rarity\") !== \"Common\"\n    );\n    const rareCharacters = myFactionCharacters.filter(\n      (record) => record.get(\"Rarity\") === \"Rare\"\n    );\n    const commonCharacters = myFactionCharacters.filter(\n      (record) => record.get(\"Rarity\") === \"Common\"\n    );\n\n    let commonIndex = getRandomInt(commonCharacters.length);\n    let character1 =\n      epicAndRareCharacters[getRandomInt(epicAndRareCharacters.length)];\n    let character2 = null;\n    let character3 = commonCharacters[commonIndex];\n\n    if (character1.get(\"Rarity\") === \"Epic\") {\n      character2 = rareCharacters[getRandomInt(rareCharacters.length)];\n    } else {\n      do {\n        character2 = commonCharacters[getRandomInt(commonCharacters.length)];\n      } while (\n        character3.get(\"Character Name\") === character2.get(\"Character Name\")\n      );\n    }\n    setBooster([character1, character2, character3]);\n  }\n\n  return (\n    <div>\n      <div className=\"mb-3 row d-print-none\">\n        <h3>Random Booster Generator</h3>\n        <div className=\"col-md-4\">\n          <button\n            onClick={() => {\n              setView(\"Home\");\n            }}\n          >\n            Go Back\n          </button>\n        </div>\n        <div className=\"col-md-4\">\n          <Select\n            onChange={(input) => {\n              input ? setFaction(input.value) : setFaction(\"\");\n            }}\n            isClearable={true}\n            options={factions}\n          ></Select>\n        </div>\n        <div className=\"col-md-4\">\n          <button\n            onClick={() => {\n              generateBooster();\n            }}\n          >\n            Generate Booster\n          </button>\n        </div>\n      </div>\n      <div className=\"d-grid gap-2\">\n        {booster.map((character) => {\n          return character ? (\n            <BoosterRow character={character}></BoosterRow>\n          ) : null;\n        })}\n      </div>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport Home from \"./Home\";\nimport Booster from \"./Booster\";\nimport Airtable from \"airtable\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      view: \"Home\",\n      miniatures: [],\n    };\n  }\n\n  componentDidMount() {\n    var base = new Airtable({ apiKey: \"keycAAcHBy1WJJYyl\" }).base(\n      \"appi27ynSRiwJ0WEQ\"\n    );\n\n    base(\"Miniatures\")\n      .select({ view: \"Grid view\" })\n      .eachPage((records, fetchNextPage) => {\n        this.setState({\n          miniatures: [...this.state.miniatures, ...records],\n        });\n        fetchNextPage();\n      });\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"App container\">\n        <h1 className=\"d-print-none\">Warcraft Army Manager</h1>\n        {this.state.view === \"Home\" ? (\n          <Home\n            setView={(view) => {\n              this.setState({ view });\n            }}\n          ></Home>\n        ) : this.state.view === \"Booster\" ? (\n          <Booster\n            miniatures={this.state.miniatures}\n            setView={(view) => {\n              this.setState({ view });\n            }}\n          ></Booster>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}