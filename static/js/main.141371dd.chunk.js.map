{"version":3,"sources":["Home.js","Booster/BoosterRow.js","Booster/Booster.js","Manager/ArmyViewer/ArmyViewerRow.js","Manager/ArmyViewer/ArmyViewer.js","Manager/CharacterViewer/CharacterViewer.js","Manager/Manager.js","App.js","reportWebVitals.js","index.js"],"names":["Home","setView","className","type","onClick","BoosterRow","character","console","log","fields","characterCard","get","itemCard1","itemCard2","src","alt","Booster","miniatures","useState","booster","setBooster","faction","setFaction","factions","value","label","onChange","input","isClearable","options","chosenFaction","getRandomInt","max","Math","floor","random","myFactionCharacters","filter","miniature","epicAndRareCharacters","record","rareCharacters","commonCharacters","commonIndex","length","character1","character2","character3","generateBooster","map","ArmyViewerRow","setManagerView","ArmyViewer","army","index","CharacterViewer","undefined","raceFilter","setRaceFilter","classFilter","setClassFilter","filteredCharacters","raceOptions","classOptions","races","classes","forEach","indexOf","push","sort","race1","race2","clazz1","clazz2","setupRaceAndClass","race","clazz","width","height","Manager","props","state","Array","apply","managerView","this","setState","view","Component","App","count","Airtable","apiKey","base","select","eachPage","records","fetchNextPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAEe,SAASA,EAAT,GAA4B,IAAZC,EAAW,EAAXA,QAC7B,OACE,gCACE,wBACEC,UAAU,6BACVC,KAAK,SACLC,QAAS,kBAAMH,EAAQ,YAHzB,+BAOA,wBACEC,UAAU,6BACVC,KAAK,SACLC,QAAS,kBAAMH,EAAQ,YAHzB,gC,WCZS,SAASI,EAAT,GAAoC,IAAdC,EAAa,EAAbA,UACnCC,QAAQC,IAAIF,EAAUG,QACtB,IAAMC,EAAgBJ,EAAUK,IAAI,kBAAkB,GAAhC,IAChBC,EAAYN,EAAUK,IAAI,2BAA2B,GAAzC,IACZE,EAAYP,EAAUK,IAAI,2BAA2B,GAAzC,IAElB,OACE,sBAAKT,UAAU,MAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,qBAAKA,UAAU,YAAYY,IAAKJ,EAAeK,IAAI,qBAErD,qBAAKb,UAAU,uBAAf,SACE,qBAAKA,UAAU,YAAYY,IAAKF,EAAWG,IAAI,kBAEjD,qBAAKb,UAAU,uBAAf,SACE,qBAAKA,UAAU,YAAYY,IAAKD,EAAWE,IAAI,oBARzBT,EAAUK,IAAI,O,iBCF7B,SAASK,EAAT,GAA2C,IAAxBf,EAAuB,EAAvBA,QAASgB,EAAc,EAAdA,WACzC,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAAW,CACf,CAAEC,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,UAAWC,MAAO,YA8C7B,OACE,gCACE,sBAAKvB,UAAU,wBAAf,UACE,0DACA,qBAAKA,UAAU,WAAf,SACE,wBAAQA,UAAU,iBAChBE,QAAS,WACPH,EAAQ,SAFZ,uBAQF,qBAAKC,UAAU,WAAf,SACE,cAAC,IAAD,CACEwB,SAAU,SAACC,GACDL,EAARK,EAAmBA,EAAMH,MAAoB,KAE/CI,aAAa,EACbC,QAASN,MAGb,qBAAKrB,UAAU,WAAf,SACE,wBAAQA,UAAU,kBAChBE,QAAS,YAnEnB,WACE,IAAI0B,EAAgBT,EAEpB,SAASU,EAAaC,GACpB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWH,GAG/BF,IACHA,EAAgBP,EAASQ,EAAa,IAAIP,OAG5C,IAAMY,EAAsBnB,EAAWoB,QACrC,SAACC,GAAD,OAAeA,EAAU3B,IAAI,aAAemB,KAE9CvB,QAAQC,IAAI4B,GACZ,IAAMG,EAAwBH,EAAoBC,QAChD,SAACG,GAAD,MAAqC,WAAzBA,EAAO7B,IAAI,aAEnB8B,EAAiBL,EAAoBC,QACzC,SAACG,GAAD,MAAqC,SAAzBA,EAAO7B,IAAI,aAEnB+B,EAAmBN,EAAoBC,QAC3C,SAACG,GAAD,MAAqC,WAAzBA,EAAO7B,IAAI,aAGrBgC,EAAcZ,EAAaW,EAAiBE,QAC5CC,EACFN,EAAsBR,EAAaQ,EAAsBK,SACvDE,EAAa,KACbC,EAAaL,EAAiBC,GAElC,GAAiC,SAA7BE,EAAWlC,IAAI,UACjBmC,EAAaL,EAAeV,EAAaU,EAAeG,cAExD,GACEE,EAAaJ,EAAiBX,EAAaW,EAAiBE,eAE5DG,EAAWpC,IAAI,oBAAsBmC,EAAWnC,IAAI,mBAGxDS,EAAW,CAACyB,EAAYC,EAAYC,IA4B1BC,IAFJ,mCASJ,qBAAK9C,UAAU,eAAf,SACGiB,EAAQ8B,KAAI,SAAC3C,GACZ,OAAOA,EACL,cAACD,EAAD,CAAYC,UAAWA,IACrB,aC7FC,SAAS4C,EAAT,GAAsD,EAA7B5C,UAA8B,IAAnB6C,EAAkB,EAAlBA,eACjD,OACE,sBAAKjD,UAAU,aAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAKY,IAAI,MAAMZ,UAAU,eAAea,IAAI,QAC5C,qBAAKb,UAAU,YAAf,SACE,oBAAIA,UAAU,aAAd,4BAGJ,sBAAKA,UAAU,OAAf,UACE,qBAAKY,IAAI,MAAMZ,UAAU,eAAea,IAAI,QAC5C,qBAAKb,UAAU,YAAf,SACE,oBAAIA,UAAU,aAAd,8BAGJ,sBAAKA,UAAU,OAAf,UACE,qBAAKY,IAAI,MAAMZ,UAAU,eAAea,IAAI,QAC5C,qBAAKb,UAAU,YAAf,SACE,oBAAIA,UAAU,aAAd,8BAGJ,sBAAKA,UAAU,OAAf,UACE,qBAAKY,IAAI,MAAMZ,UAAU,eAAea,IAAI,QAC5C,qBAAKb,UAAU,YAAf,SACE,oBAAIA,UAAU,aAAd,8BAGJ,qBAAKA,UAAU,OAAf,SACI,qBAAKA,UAAU,UAAf,SACE,wBAAQE,QAAS,WAAO+C,EAAe,oBAAqBjD,UAAU,kBAAtE,mCC1BG,SAASkD,EAAT,GAA6E,IAAvDnD,EAAsD,EAAtDA,QAASkD,EAA6C,EAA7CA,eAAgBE,EAA6B,EAA7BA,KAAMhC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WAO3E,OACE,gCACE,qBAAKpB,UAAU,WAAf,SACE,wBACEA,UAAU,iBACVE,QAAS,WACPH,EAAQ,SAHZ,uBASF,qBAAKC,UAAU,wBAAf,SACE,qBAAKA,UAAU,WAAf,SACE,cAAC,IAAD,CACEwB,SAAU,SAACC,GACDL,EAARK,EAAmBA,EAAMH,MAAoB,KAE/CI,aAAa,EACbC,QAzBO,CACf,CAAEL,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,UAAWC,MAAO,kBA0BzB,8BACGJ,EACGgC,EAAKJ,KAAI,SAAC3C,EAAWgD,GACnB,OACE,cAACJ,EAAD,CAEE5C,UAAWA,EACX6C,eAAgBA,EAChB9B,QAASA,GAHJiC,MAOX,QC1CG,SAASC,EAAT,GAAmD,IAAxBtC,EAAuB,EAAvBA,WAAYI,EAAW,EAAXA,QACpD,EAAoCH,wBAASsC,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAsCxC,wBAASsC,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAEIxB,EAAsBnB,EAAWoB,QACnC,SAACC,GAAD,OAAeA,EAAU3B,IAAI,aAAeU,KAG1CwC,EAAqBzB,EAAoBC,QAAO,SAACC,GACnD,QACGmB,GAAanB,EAAU3B,IAAI,UAAY8C,EAAWjC,UAClDmC,GAAcrB,EAAU3B,IAAI,WAAagD,EAAYnC,UAItDsC,EAAc,GACdC,EAAe,GAInB,OA6CF,SAA2B3B,EAAqB0B,EAAaC,GAC3D,IAAIC,EAAQ,GACRC,EAAU,GAEd7B,EAAoB8B,SAAQ,SAAC5D,IACmB,IAA1C0D,EAAMG,QAAQ7D,EAAUK,IAAI,WAC9BqD,EAAMI,KAAK9D,EAAUK,IAAI,SACzBmD,EAAYM,KAAK,CACf5C,MAAOlB,EAAUK,IAAI,QACrBc,MAAOnB,EAAUK,IAAI,YAGwB,IAA7CsD,EAAQE,QAAQ7D,EAAUK,IAAI,YAChCsD,EAAQG,KAAK9D,EAAUK,IAAI,UAC3BoD,EAAaK,KAAK,CAChB5C,MAAOlB,EAAUK,IAAI,SACrBc,MAAOnB,EAAUK,IAAI,eAK3BmD,EAAYO,MAAK,SAACC,EAAOC,GACvB,OAAOD,EAAM9C,MAAQ+C,EAAM/C,SAE7BuC,EAAaM,MAAK,SAACG,EAAQC,GACzB,OAAOD,EAAOhD,MAAQiD,EAAOjD,SAxE/BkD,CAAkBtC,EAAqB0B,EAAaC,GAGlD,gCACE,sBAAK7D,UAAU,wBAAf,UACE,qBAAKA,UAAU,QAAf,SACE,cAAC,IAAD,CACE0B,aAAa,EACbC,QAASiC,EACTpC,SAAU,SAACiD,GACTjB,EAAciB,QAIpB,qBAAKzE,UAAU,WAAf,SACE,cAAC,IAAD,CACE0B,aAAa,EACbC,QAASkC,EACTrC,SAAU,SAACkD,GACThB,EAAegB,WAMvB,qBAAK1E,UAAU,MAAf,SACG2D,EAAmBZ,KAAI,SAAC3C,GACvB,OACE,qBAEEJ,UAAU,4BAFZ,SAIE,qBACEA,UAAU,YACVY,IAAKR,EAAUK,IAAI,kBAAkB,GAAhC,IACLI,IAAI,iBACJ8D,MAAM,MACNC,OAAO,SARJxE,EAAUK,IAAI,2B,IC9CZoE,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX5B,KAAM6B,MAAMC,MAAM,KAAMD,MAAM,IAAIjC,KAAI,eAGtCmC,YAAa,aACb/D,aAASmC,GAPM,E,kDAWnB,WACE6B,KAAKC,SAAS,CAAEF,YAAa,sB,oBAG/B,WAAU,IAAD,OACP,OACE,gCACE,iDAC4B,oBAA3BC,KAAKJ,MAAMG,YACV,cAAC7B,EAAD,CACElC,QAASgE,KAAKJ,MAAM5D,QACpBJ,WAAYoE,KAAKL,MAAM/D,aAGzB,cAACmC,EAAD,CACEC,KAAMgC,KAAKJ,MAAM5B,KACjBpD,QAAS,SAACsF,GACR,EAAKP,MAAM/E,QAAQsF,IAErBpC,eAAgB,SAACiC,GACf,EAAKE,SAAS,CAAEF,iBAElB/D,QAAWgE,KAAKJ,MAAM5D,QACtBC,WAAY,SAACD,GACX,EAAKiE,SAAS,CAACjE,sB,GApCQmE,a,iBC4DtBC,E,kDAxDb,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXS,MAAO,EACPH,KAAM,OACNtE,WAAY,IALG,E,qDASnB,WAAqB,IAAD,OACP,IAAI0E,IAAS,CAAEC,OAAQ,sBAAuBC,KACvD,oBAGFA,CAAK,cACFC,OAAO,CAAEP,KAAM,cACfQ,UAAS,SAACC,EAASC,GAClB,EAAKX,SAAS,CACZrE,WAAW,GAAD,mBAAM,EAAKgE,MAAMhE,YAAjB,YAAgC+E,MAE5CC,S,oBAIN,WAAU,IAAD,OACP,OACE,sBAAK/F,UAAU,gBAAf,UACE,oBAAIA,UAAU,eAAd,mCACqB,SAApBmF,KAAKJ,MAAMM,KACV,cAAC,EAAD,CACEtF,QAAS,SAACsF,GACR,EAAKD,SAAS,CAAEC,YAGE,YAApBF,KAAKJ,MAAMM,KACb,cAAC,EAAD,CACEtE,WAAYoE,KAAKJ,MAAMhE,WACvBhB,QAAS,SAACsF,GACR,EAAKD,SAAS,CAAEC,YAGE,YAApBF,KAAKJ,MAAMM,KACb,cAAC,EAAD,CACEtE,WAAYoE,KAAKJ,MAAMhE,WACvBhB,QAAS,SAACsF,GACR,EAAKD,SAAS,CAAEC,YAIpB,U,GAlDQC,aCKHU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,cCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.141371dd.chunk.js","sourcesContent":["import \"./Home.css\";\n\nexport default function Home({ setView }) {\n  return (\n    <div>\n      <button\n        className=\"homeButton btn btn-primary\"\n        type=\"button\"\n        onClick={() => setView(\"Booster\")}\n      >\n        Booster Generator\n      </button>\n      <button\n        className=\"homeButton btn btn-primary\"\n        type=\"button\"\n        onClick={() => setView(\"Manager\")}\n      >\n        Warband Manager\n      </button>\n    </div>\n  );\n}\n","export default function BoosterRow({ character }) {\n  console.log(character.fields);\n  const characterCard = character.get(\"Character Card\")[0][\"url\"];\n  const itemCard1 = character.get(\"Item Card (from Card 1)\")[0][\"url\"];\n  const itemCard2 = character.get(\"Item Card (from Card 2)\")[0][\"url\"];\n\n  return (\n    <div className=\"row\" key={character.get(\"Id\")}>\n      <div className=\"col-5 d-print-inline\">\n        <img className=\"img-fluid\" src={characterCard} alt=\"Character Card\"></img>\n      </div>\n      <div className=\"col-3 d-print-inline\">\n        <img className=\"img-fluid\" src={itemCard1} alt=\"Item Card 1\" ></img>\n      </div>\n      <div className=\"col-3 d-print-inline\">\n        <img className=\"img-fluid\" src={itemCard2} alt=\"Item Card 2\"></img>\n      </div>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport BoosterRow from \"./BoosterRow\";\nimport Select from \"react-select\";\nimport \"./Booster.css\";\n\nexport default function Booster({ setView, miniatures }) {\n  const [booster, setBooster] = useState([]);\n  const [faction, setFaction] = useState(\"\");\n  const factions = [\n    { value: \"Horde\", label: \"Horde\" },\n    { value: \"Alliance\", label: \"Alliance\" },\n    { value: \"Monster\", label: \"Monster\" },\n  ];\n\n  function generateBooster() {\n    let chosenFaction = faction;\n\n    function getRandomInt(max) {\n      return Math.floor(Math.random() * max);\n    }\n\n    if (!chosenFaction) {\n      chosenFaction = factions[getRandomInt(3)].value;\n    }\n\n    const myFactionCharacters = miniatures.filter(\n      (miniature) => miniature.get(\"Faction\") === chosenFaction\n    );\n    console.log(myFactionCharacters);\n    const epicAndRareCharacters = myFactionCharacters.filter(\n      (record) => record.get(\"Rarity\") !== \"Common\"\n    );\n    const rareCharacters = myFactionCharacters.filter(\n      (record) => record.get(\"Rarity\") === \"Rare\"\n    );\n    const commonCharacters = myFactionCharacters.filter(\n      (record) => record.get(\"Rarity\") === \"Common\"\n    );\n\n    let commonIndex = getRandomInt(commonCharacters.length);\n    let character1 =\n      epicAndRareCharacters[getRandomInt(epicAndRareCharacters.length)];\n    let character2 = null;\n    let character3 = commonCharacters[commonIndex];\n\n    if (character1.get(\"Rarity\") === \"Epic\") {\n      character2 = rareCharacters[getRandomInt(rareCharacters.length)];\n    } else {\n      do {\n        character2 = commonCharacters[getRandomInt(commonCharacters.length)];\n      } while (\n        character3.get(\"Character Name\") === character2.get(\"Character Name\")\n      );\n    }\n    setBooster([character1, character2, character3]);\n  }\n\n  return (\n    <div>\n      <div className=\"mb-3 row d-print-none\">\n        <h3>Random Booster Generator</h3>\n        <div className=\"col-md-4\">\n          <button className=\"btn btn-danger\"\n            onClick={() => {\n              setView(\"Home\");\n            }}\n          >\n            Go Back\n          </button>\n        </div>\n        <div className=\"col-md-4\">\n          <Select\n            onChange={(input) => {\n              input ? setFaction(input.value) : setFaction(\"\");\n            }}\n            isClearable={true}\n            options={factions}\n          ></Select>\n        </div>\n        <div className=\"col-md-4\">\n          <button className=\"btn btn-primary\"\n            onClick={() => {\n              generateBooster();\n            }}\n          >\n            Generate Booster\n          </button>\n        </div>\n      </div>\n      <div className=\"d-grid gap-2\">\n        {booster.map((character) => {\n          return character ? (\n            <BoosterRow character={character}></BoosterRow>\n          ) : null;\n        })}\n      </div>\n    </div>\n  );\n}\n","export default function ArmyViewerRow({ character, setManagerView }) {\n  return (\n    <div className=\"card-group\">\n      <div className=\"card\">\n        <img src=\"...\" className=\"card-img-top\" alt=\"...\" />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">Hero Name</h5>\n        </div>\n      </div>\n      <div className=\"card\">\n        <img src=\"...\" className=\"card-img-top\" alt=\"...\" />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">Item Name 1</h5>\n        </div>\n      </div>\n      <div className=\"card\">\n        <img src=\"...\" className=\"card-img-top\" alt=\"...\" />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">Item Name 2</h5>\n        </div>\n      </div>\n      <div className=\"card\">\n        <img src=\"...\" className=\"card-img-top\" alt=\"...\" />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">Item Name 3</h5>\n        </div>\n      </div>\n      <div className=\"card\">\n          <div className=\"my-auto\">\n            <button onClick={() => {setManagerView('CharacterViewer')}} className=\"btn btn-primary\">Edit Character</button>\n          </div>\n      </div>\n    </div>\n  );\n}\n","import Select from \"react-select\";\nimport ArmyViewerRow from \"./ArmyViewerRow\";\n\nexport default function ArmyViewer({ setView, setManagerView, army, faction, setFaction }) {\n  const factions = [\n    { value: \"Horde\", label: \"Horde\" },\n    { value: \"Alliance\", label: \"Alliance\" },\n    { value: \"Monster\", label: \"Monster\" },\n  ];\n\n  return (\n    <div>\n      <div className=\"col-md-4\">\n        <button\n          className=\"btn btn-danger\"\n          onClick={() => {\n            setView(\"Home\");\n          }}\n        >\n          Go Back\n        </button>\n      </div>\n      <div className=\"mb-3 row d-print-none\">\n        <div className=\"col-md-4\">\n          <Select\n            onChange={(input) => {\n              input ? setFaction(input.value) : setFaction(\"\");\n            }}\n            isClearable={true}\n            options={factions}\n          ></Select>\n        </div>\n      </div>\n      <div>\n        {faction\n          ? army.map((character, index) => {\n              return (\n                <ArmyViewerRow\n                  key={index}\n                  character={character}\n                  setManagerView={setManagerView}\n                  faction={faction}\n                ></ArmyViewerRow>\n              );\n            })\n          : \"\"}\n      </div>\n    </div>\n  );\n}\n","import Select from \"react-select\";\nimport { useState } from \"react\";\n\nexport default function CharacterViewer({ miniatures, faction }) {\n  const [raceFilter, setRaceFilter] = useState(undefined);\n  const [classFilter, setClassFilter] = useState(undefined);\n\n  let myFactionCharacters = miniatures.filter(\n    (miniature) => miniature.get(\"Faction\") === faction\n  );\n\n  let filteredCharacters = myFactionCharacters.filter((miniature) => {\n    return (\n      (raceFilter ? miniature.get(\"Race\") === raceFilter.value : true) &&\n      (classFilter ? miniature.get(\"Class\") === classFilter.value : true)\n    );\n  });\n\n  let raceOptions = [];\n  let classOptions = [];\n\n  setupRaceAndClass(myFactionCharacters, raceOptions, classOptions);\n  \n  return (\n    <div>\n      <div className=\"mb-3 row d-print-none\">\n        <div className=\"col-4\">\n          <Select\n            isClearable={true}\n            options={raceOptions}\n            onChange={(race) => {\n              setRaceFilter(race);\n            }}\n          ></Select>\n        </div>\n        <div className=\"col-md-4\">\n          <Select\n            isClearable={true}\n            options={classOptions}\n            onChange={(clazz) => {\n              setClassFilter(clazz);\n            }}\n          ></Select>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        {filteredCharacters.map((character) => {\n          return (\n            <div\n              key={character.get(\"Character Name\")}\n              className=\"col-4 my-1 d-print-inline\"\n            >\n              <img\n                className=\"img-fluid\"\n                src={character.get(\"Character Card\")[0][\"url\"]}\n                alt=\"Character Card\"\n                width=\"416\"\n                height=\"297\"\n              ></img>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction setupRaceAndClass(myFactionCharacters, raceOptions, classOptions) {\n  let races = [];\n  let classes = [];\n\n  myFactionCharacters.forEach((character) => {\n    if (races.indexOf(character.get(\"Race\")) === -1) {\n      races.push(character.get(\"Race\"));\n      raceOptions.push({\n        value: character.get(\"Race\"),\n        label: character.get(\"Race\"),\n      });\n    }\n    if (classes.indexOf(character.get(\"Class\")) === -1) {\n      classes.push(character.get(\"Class\"));\n      classOptions.push({\n        value: character.get(\"Class\"),\n        label: character.get(\"Class\"),\n      });\n    }\n  });\n\n  raceOptions.sort((race1, race2) => {\n    return race1.value > race2.value;\n  });\n  classOptions.sort((clazz1, clazz2) => {\n    return clazz1.value > clazz2.value;\n  });\n}\n","import { Component } from \"react\";\nimport ArmyViewer from \"./ArmyViewer/ArmyViewer\";\nimport CharacterViewer from \"./CharacterViewer/CharacterViewer\";\n\nexport default class Manager extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      army: Array.apply(null, Array(3)).map(() => {\n        return undefined;\n      }),\n      managerView: \"ArmyViewer\",\n      faction: undefined,\n    };\n  }\n\n  setManagerView() {\n    this.setState({ managerView: \"CharacterViewer\" });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Warband Manager</h3>\n        {this.state.managerView === \"CharacterViewer\" ? (\n          <CharacterViewer\n            faction={this.state.faction}\n            miniatures={this.props.miniatures}\n          ></CharacterViewer>\n        ) : (\n          <ArmyViewer\n            army={this.state.army}\n            setView={(view) => {\n              this.props.setView(view);\n            }}\n            setManagerView={(managerView) => {\n              this.setState({ managerView });\n            }}\n            faction = {this.state.faction}\n            setFaction={(faction) => {\n              this.setState({faction});\n            }}\n          ></ArmyViewer>\n        )}\n      </div>\n    );\n  }\n}\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport Home from \"./Home\";\nimport Booster from \"./Booster/Booster\";\nimport Manager from \"./Manager/Manager\";\nimport Airtable from \"airtable\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      view: \"Home\",\n      miniatures: [],\n    };\n  }\n\n  componentDidMount() {\n    var base = new Airtable({ apiKey: \"keycAAcHBy1WJJYyl\" }).base(\n      \"appi27ynSRiwJ0WEQ\"\n    );\n\n    base(\"Miniatures\")\n      .select({ view: \"Grid view\" })\n      .eachPage((records, fetchNextPage) => {\n        this.setState({\n          miniatures: [...this.state.miniatures, ...records],\n        });\n        fetchNextPage();\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App container\">\n        <h1 className=\"d-print-none\">Warcraft Army Manager</h1>\n        {this.state.view === \"Home\" ? (\n          <Home\n            setView={(view) => {\n              this.setState({ view });\n            }}\n          ></Home>\n        ) : this.state.view === \"Booster\" ? (\n          <Booster\n            miniatures={this.state.miniatures}\n            setView={(view) => {\n              this.setState({ view });\n            }}\n          ></Booster>\n        ) : this.state.view === \"Manager\" ? (\n          <Manager\n            miniatures={this.state.miniatures}\n            setView={(view) => {\n              this.setState({ view });\n            }}\n          ></Manager>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}